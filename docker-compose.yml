services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq

  user-db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user-db
    ports:
      - 5432:5432
    volumes:
      - user-db:/data/postgres

  user:
    build:
      context: ./user
      dockerfile: Dockerfile
    depends_on:
      - user-db
      - rabbitmq
    ports:
      - 8080:8080
      - 8081:8081

  product-db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: product-db
    volumes:
      - product-db:/data/postgres

  product:
    build:
      context: ./product
      dockerfile: Dockerfile
    depends_on:
      - product-db
      - rabbitmq
    ports:
      - 8090:8090
      - 8091:8091

  order-db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: order-db
    volumes:
      - order-db:/data/postgres

  order:
    build:
      context: ./order
      dockerfile: Dockerfile
    depends_on:
      - order-db
      - rabbitmq
    ports:
      - 8070:8070
      - 8071:8071

  redis:
    image: redis
    ports:
      - 6379:6379

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    depends_on:
      - redis
      - user
      - product
      - order
    ports:
      - 3010:3010

  prometheus:
    image: prom/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./grafana:/etc/grafana/provisioning/

volumes:
  rabbitmq-data:
  rabbitmq-log:
  user-db:
  product-db:
  order-db:
  prom_data:
